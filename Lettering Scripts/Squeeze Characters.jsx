function squeezeChars(obj, scalefactor){    for (var i = 1; i < (obj.characters.length - 1); i++) { // iterate over everything except the first and last characters        if (i+1 < obj.characters.length / 2) { // in first half            obj.characters[i].pointSize = (obj.characters[i-1].pointSize * (((obj.characters.length - 1) / obj.characters.length)) * scalefactor) // decrease by 1/length every character                            obj.characters[i].baselineShift = (obj.characters[0].pointSize - obj.characters[i].pointSize) / 2 // set baseline shift to half the difference in point size between the initial character and the current character        }        if (i == Math.ceil(obj.characters.length / 2) - 1 ) { // at midpoint            obj.characters[i].pointSize = (obj.characters[0].pointSize / 2) * scalefactor            obj.characters[i].baselineShift = ((obj.characters[0].pointSize - obj.characters[i].pointSize) / 2) * scalefactor // set baseline shift to half the difference in point size between the initial character and the current character        }        if (i+1 > obj.characters.length / 2) { // in last half            obj.characters[i].pointSize = obj.characters[obj.characters.length - (i + 1)].pointSize // mirror the size of the characters in the first half                          obj.characters[i].baselineShift = obj.characters[obj.characters.length - (i + 1)].baselineShift // set baseline shift to half the difference in point size between the initial character and the current character        }      }}squeezeChars(app.selection[0], .8)